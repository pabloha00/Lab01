

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 03:04:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  001F                     _ADCON0bits	set	31
   288  001F                     _ADCON0	set	31
   289  0009                     _PORTE	set	9
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  0008                     _PORTD	set	8
   294  0006                     _PORTBbits	set	6
   295  001E                     _ADRESH	set	30
   296  000C                     _PIR1bits	set	12
   297  0009                     _PORTEbits	set	9
   298  0001                     _TMR0	set	1
   299  000B                     _INTCONbits	set	11
   300  0081                     _OPTION_REG	set	129
   301  009F                     _ADCON1	set	159
   302  008F                     _OSCCONbits	set	143
   303  0095                     _WPUBbits	set	149
   304  0096                     _IOCBbits	set	150
   305  0089                     _TRISE	set	137
   306  0088                     _TRISD	set	136
   307  0087                     _TRISC	set	135
   308  0086                     _TRISB	set	134
   309  0085                     _TRISA	set	133
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSELbits	set	392
   312  0188                     _ANSEL	set	392
   313                           
   314                           	psect	cinit
   315  0011                     start_initialization:	
   316                           ; #config settings
   317                           
   318  0011                     __initialization:
   319                           
   320                           ; Clear objects allocated to COMMON
   321  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   322  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   323  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   324  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   325  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   326  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  0017  1283               	bcf	3,5	;RP0=0, select bank0
   330  0018  1303               	bcf	3,6	;RP1=0, select bank0
   331  0019  01A0               	clrf	__pbssBANK0& (0+127)
   332  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   333  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   334  001C                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337  001C                     __end_of__initialization:
   338  001C  0183               	clrf	3
   339  001D  120A  118A  2963   	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMMON
   342  0078                     __pbssCOMMON:
   343  0078                     _AR3:
   344  0078                     	ds	1
   345  0079                     _AR1:
   346  0079                     	ds	1
   347  007A                     _HNibble:
   348  007A                     	ds	1
   349  007B                     _nowadc:
   350  007B                     	ds	1
   351  007C                     _mux:
   352  007C                     	ds	1
   353  007D                     _anlec:
   354  007D                     	ds	1
   355                           
   356                           	psect	bssBANK0
   357  0020                     __pbssBANK0:
   358  0020                     _AR4:
   359  0020                     	ds	1
   360  0021                     _AR2:
   361  0021                     	ds	1
   362  0022                     _LNibble:
   363  0022                     	ds	1
   364                           
   365                           	psect	cstackCOMMON
   366  0070                     __pcstackCOMMON:
   367  0070                     ?_tabla:
   368  0070                     ??_tabla:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_Setup:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_ADC:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_Alarm:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_ISR:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388  0070                     	ds	2
   389  0072                     tabla@dec:
   390                           
   391                           ; 1 bytes @ 0x2
   392  0072                     	ds	1
   393  0073                     ??_ISR:
   394                           
   395                           ; 1 bytes @ 0x3
   396  0073                     	ds	5
   397                           
   398                           	psect	cstackBANK0
   399  0000                     __pcstackBANK0:
   400  0000                     ??_Setup:
   401  0000                     ??_ADC:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0000                     ??_Alarm:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0000                     ??_main:	
   408                           ; 1 bytes @ 0x0
   409                           
   410                           
   411                           	psect	maintext
   412  0163                     __pmaintext:	
   413                           ; 1 bytes @ 0x0
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 99 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called: 3
   439 ;; This function calls:
   440 ;;		_ADC
   441 ;;		_Alarm
   442 ;;		_Setup
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  0163                     _main:
   451  0163                     l1071:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;main.c: 100:     IOCBbits.IOCB1 = 1;
   457  0163  120A  118A  2130  120A  118A  	fcall	_Setup
   458  0168                     l99:	
   459                           ;main.c: 101:     WPUBbits.WPUB0 = 1;
   460                           
   461                           
   462                           ;main.c: 102:     WPUBbits.WPUB1 = 1;
   463  0168  120A  118A  2182  120A  118A  	fcall	_ADC
   464                           
   465                           ;main.c: 103:     PIR1bits.ADIF = 0;
   466  016D  120A  118A  2176  120A  118A  	fcall	_Alarm
   467  0172  2968               	goto	l99
   468  0173  120A  118A  280E   	ljmp	start
   469  0176                     __end_of_main:
   470                           
   471                           	psect	text1
   472  0130                     __ptext1:	
   473 ;; *************** function _Setup *****************
   474 ;; Defined at:
   475 ;;		line 108 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _Setup
   505  0130                     _Setup:
   506  0130                     l953:	
   507                           ;incstack = 0
   508                           ; Regs used in _Setup: [wreg+status,2]
   509                           
   510                           
   511                           ;main.c: 110: 
   512  0130  1283               	bcf	3,5	;RP0=0, select bank0
   513  0131  1303               	bcf	3,6	;RP1=0, select bank0
   514  0132  0185               	clrf	5	;volatile
   515                           
   516                           ;main.c: 111: 
   517  0133  0186               	clrf	6	;volatile
   518                           
   519                           ;main.c: 112: 
   520  0134  0187               	clrf	7	;volatile
   521                           
   522                           ;main.c: 113:     OPTION_REG = 0b01010111;
   523  0135  0188               	clrf	8	;volatile
   524                           
   525                           ;main.c: 114: }
   526  0136  0189               	clrf	9	;volatile
   527                           
   528                           ;main.c: 115: 
   529  0137  1683               	bsf	3,5	;RP0=1, select bank3
   530  0138  1703               	bsf	3,6	;RP1=1, select bank3
   531  0139  0188               	clrf	8	;volatile
   532  013A                     l955:
   533                           
   534                           ;main.c: 116: void ADC(void){
   535  013A  1408               	bsf	8,0	;volatile
   536                           
   537                           ;main.c: 117:     if (nowadc > 5){
   538  013B  0189               	clrf	9	;volatile
   539  013C                     l957:
   540                           
   541                           ;main.c: 118:      nowadc = 0;
   542  013C  3001               	movlw	1
   543  013D  1683               	bsf	3,5	;RP0=1, select bank1
   544  013E  1303               	bcf	3,6	;RP1=0, select bank1
   545  013F  0085               	movwf	5	;volatile
   546  0140                     l959:
   547                           
   548                           ;main.c: 119:      ADCON0bits.GO_nDONE = 1;
   549  0140  30FF               	movlw	255
   550  0141  0086               	movwf	6	;volatile
   551                           
   552                           ;main.c: 120:     }
   553  0142  0187               	clrf	7	;volatile
   554                           
   555                           ;main.c: 121: }
   556  0143  0188               	clrf	8	;volatile
   557                           
   558                           ;main.c: 122: void Alarm(void){
   559  0144  0189               	clrf	9	;volatile
   560  0145                     l961:
   561                           
   562                           ;main.c: 123:     if(anlec > PORTD){
   563  0145  110B               	bcf	11,2	;volatile
   564  0146                     l963:
   565                           
   566                           ;main.c: 124:         PORTEbits.RE2 = 1;
   567  0146  100B               	bcf	11,0	;volatile
   568  0147                     l965:
   569                           
   570                           ;main.c: 125:     }
   571  0147  178B               	bsf	11,7	;volatile
   572  0148                     l967:
   573                           
   574                           ;main.c: 126:     else{
   575  0148  170B               	bsf	11,6	;volatile
   576  0149                     l969:
   577                           
   578                           ;main.c: 127:         PORTEbits.RE2 = 0;
   579  0149  168B               	bsf	11,5	;volatile
   580  014A                     l971:
   581                           
   582                           ;main.c: 128:     }
   583  014A  158B               	bsf	11,3	;volatile
   584  014B                     l973:
   585                           
   586                           ;main.c: 129: }
   587  014B  1416               	bsf	22,0	;volatile
   588  014C                     l975:
   589  014C  1496               	bsf	22,1	;volatile
   590  014D                     l977:
   591  014D  1415               	bsf	21,0	;volatile
   592  014E                     l979:
   593  014E  1495               	bsf	21,1	;volatile
   594  014F                     l981:
   595  014F  1283               	bcf	3,5	;RP0=0, select bank0
   596  0150  1303               	bcf	3,6	;RP1=0, select bank0
   597  0151  130C               	bcf	12,6	;volatile
   598  0152                     l983:
   599  0152  1683               	bsf	3,5	;RP0=1, select bank1
   600  0153  1303               	bcf	3,6	;RP1=0, select bank1
   601  0154  120F               	bcf	15,4	;volatile
   602  0155                     l985:
   603  0155  168F               	bsf	15,5	;volatile
   604  0156                     l987:
   605  0156  170F               	bsf	15,6	;volatile
   606  0157  019F               	clrf	31	;volatile
   607  0158                     l989:
   608  0158  3041               	movlw	65
   609  0159  1283               	bcf	3,5	;RP0=0, select bank0
   610  015A  1303               	bcf	3,6	;RP1=0, select bank0
   611  015B  009F               	movwf	31	;volatile
   612  015C                     l991:
   613  015C  30EC               	movlw	236
   614  015D  0081               	movwf	1	;volatile
   615  015E                     l993:
   616  015E  3057               	movlw	87
   617  015F  1683               	bsf	3,5	;RP0=1, select bank1
   618  0160  1303               	bcf	3,6	;RP1=0, select bank1
   619  0161  0081               	movwf	1	;volatile
   620  0162                     l105:
   621  0162  0008               	return
   622  0163                     __end_of_Setup:
   623                           
   624                           	psect	text2
   625  0176                     __ptext2:	
   626 ;; *************** function _Alarm *****************
   627 ;; Defined at:
   628 ;;		line 152 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _Alarm
   658  0176                     _Alarm:
   659  0176                     l1001:	
   660                           ;incstack = 0
   661                           ; Regs used in _Alarm: [wreg]
   662                           
   663  0176  087D               	movf	_anlec,w
   664  0177  1283               	bcf	3,5	;RP0=0, select bank0
   665  0178  1303               	bcf	3,6	;RP1=0, select bank0
   666  0179  0208               	subwf	8,w	;volatile
   667  017A  1803               	skipnc
   668  017B  297D               	goto	u151
   669  017C  297E               	goto	u150
   670  017D                     u151:
   671  017D  2980               	goto	l112
   672  017E                     u150:
   673  017E                     l1003:
   674  017E  1509               	bsf	9,2	;volatile
   675  017F  2981               	goto	l114
   676  0180                     l112:
   677  0180  1109               	bcf	9,2	;volatile
   678  0181                     l114:
   679  0181  0008               	return
   680  0182                     __end_of_Alarm:
   681                           
   682                           	psect	text3
   683  0182                     __ptext3:	
   684 ;; *************** function _ADC *****************
   685 ;; Defined at:
   686 ;;		line 146 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 2
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _ADC
   716  0182                     _ADC:
   717  0182                     l995:	
   718                           ;incstack = 0
   719                           ; Regs used in _ADC: [wreg+status,2]
   720                           
   721  0182  3006               	movlw	6
   722  0183  027B               	subwf	_nowadc,w
   723  0184  1C03               	skipc
   724  0185  2987               	goto	u141
   725  0186  2988               	goto	u140
   726  0187                     u141:
   727  0187  298C               	goto	l109
   728  0188                     u140:
   729  0188                     l997:
   730  0188  01FB               	clrf	_nowadc
   731  0189                     l999:
   732  0189  1283               	bcf	3,5	;RP0=0, select bank0
   733  018A  1303               	bcf	3,6	;RP1=0, select bank0
   734  018B  149F               	bsf	31,1	;volatile
   735  018C                     l109:
   736  018C  0008               	return
   737  018D                     __end_of_ADC:
   738                           
   739                           	psect	text4
   740  00AD                     __ptext4:	
   741 ;; *************** function _ISR *****************
   742 ;; Defined at:
   743 ;;		line 48 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          5       0       0       0       0
   760 ;;      Totals:         5       0       0       0       0
   761 ;;Total ram usage:        5 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		_tabla
   766 ;; This function is called by:
   767 ;;		Interrupt level 1
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _ISR
   773  00AD                     _ISR:
   774  00AD                     i1l1005:
   775                           
   776                           ;main.c: 49:         }
   777  00AD  1D0B               	btfss	11,2	;volatile
   778  00AE  28B0               	goto	u16_21
   779  00AF  28B1               	goto	u16_20
   780  00B0                     u16_21:
   781  00B0  28E5               	goto	i1l1033
   782  00B1                     u16_20:
   783  00B1                     i1l1007:
   784                           
   785                           ;main.c: 50:         if (AR2==0){
   786  00B1  110B               	bcf	11,2	;volatile
   787  00B2                     i1l1009:
   788                           
   789                           ;main.c: 51:             if (AR1==1){
   790  00B2  30EC               	movlw	236
   791  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   792  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   793  00B5  0081               	movwf	1	;volatile
   794  00B6                     i1l1011:
   795                           
   796                           ;main.c: 52:                 PORTD++;
   797  00B6  3001               	movlw	1
   798  00B7  00F3               	movwf	??_ISR
   799  00B8  0873               	movf	??_ISR,w
   800  00B9  07FB               	addwf	_nowadc,f
   801  00BA                     i1l1013:
   802                           
   803                           ;main.c: 53:                 AR2=1;
   804  00BA  1009               	bcf	9,0	;volatile
   805  00BB                     i1l1015:
   806                           
   807                           ;main.c: 54:             }
   808  00BB  1089               	bcf	9,1	;volatile
   809  00BC                     i1l1017:
   810                           
   811                           ;main.c: 55:         }
   812  00BC  087C               	movf	_mux,w
   813  00BD  1D03               	btfss	3,2
   814  00BE  28C0               	goto	u17_21
   815  00BF  28C1               	goto	u17_20
   816  00C0                     u17_21:
   817  00C0  28D8               	goto	i1l1025
   818  00C1                     u17_20:
   819  00C1                     i1l1019:
   820                           
   821                           ;main.c: 56:         AR3 = PORTBbits.RB1;
   822  00C1  01FC               	clrf	_mux
   823  00C2  0AFC               	incf	_mux,f
   824                           
   825                           ;main.c: 57:         if (AR3==0){
   826  00C3  1409               	bsf	9,0	;volatile
   827  00C4                     i1l1021:
   828                           
   829                           ;main.c: 58:             AR4=0;
   830  00C4  087D               	movf	_anlec,w
   831  00C5  00F3               	movwf	??_ISR
   832  00C6  3004               	movlw	4
   833  00C7                     u18_25:
   834  00C7  1003               	clrc
   835  00C8  0CF3               	rrf	??_ISR,f
   836  00C9  3EFF               	addlw	-1
   837  00CA  1D03               	skipz
   838  00CB  28C7               	goto	u18_25
   839  00CC  0873               	movf	??_ISR,w
   840  00CD  390F               	andlw	15
   841  00CE  00F4               	movwf	??_ISR+1
   842  00CF  0874               	movf	??_ISR+1,w
   843  00D0  00FA               	movwf	_HNibble
   844  00D1                     i1l1023:
   845                           
   846                           ;main.c: 59:         }
   847  00D1  087A               	movf	_HNibble,w
   848  00D2  120A  118A  2020  120A  118A  	fcall	_tabla
   849                           
   850                           ;main.c: 60:         if (AR4==0){
   851  00D7  28E5               	goto	i1l1033
   852  00D8                     i1l1025:
   853                           
   854                           ;main.c: 62:                 PORTD--;
   855  00D8  01FC               	clrf	_mux
   856  00D9                     i1l1027:
   857                           
   858                           ;main.c: 63:                 AR4=1;
   859  00D9  1489               	bsf	9,1	;volatile
   860  00DA                     i1l1029:
   861                           
   862                           ;main.c: 64:             }
   863  00DA  087D               	movf	_anlec,w
   864  00DB  390F               	andlw	15
   865  00DC  00F3               	movwf	??_ISR
   866  00DD  0873               	movf	??_ISR,w
   867  00DE  00A2               	movwf	_LNibble
   868  00DF                     i1l1031:
   869                           
   870                           ;main.c: 65:         }
   871  00DF  0822               	movf	_LNibble,w
   872  00E0  120A  118A  2020  120A  118A  	fcall	_tabla
   873  00E5                     i1l1033:
   874                           
   875                           ;main.c: 68: 
   876  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   877  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   878  00E7  1F0C               	btfss	12,6	;volatile
   879  00E8  28EA               	goto	u19_21
   880  00E9  28EB               	goto	u19_20
   881  00EA                     u19_21:
   882  00EA  28F0               	goto	i1l1039
   883  00EB                     u19_20:
   884  00EB                     i1l1035:
   885                           
   886                           ;main.c: 69: void main(void) {
   887  00EB  130C               	bcf	12,6	;volatile
   888  00EC                     i1l1037:
   889                           
   890                           ;main.c: 70:     Setup();
   891  00EC  081E               	movf	30,w	;volatile
   892  00ED  00F3               	movwf	??_ISR
   893  00EE  0873               	movf	??_ISR,w
   894  00EF  00FD               	movwf	_anlec
   895  00F0                     i1l1039:
   896                           
   897                           ;main.c: 73:     Alarm();
   898  00F0  1C0B               	btfss	11,0	;volatile
   899  00F1  28F3               	goto	u20_21
   900  00F2  28F4               	goto	u20_20
   901  00F3                     u20_21:
   902  00F3  2927               	goto	i1l94
   903  00F4                     u20_20:
   904  00F4                     i1l1041:
   905                           
   906                           ;main.c: 74: 
   907  00F4  100B               	bcf	11,0	;volatile
   908  00F5                     i1l1043:
   909                           
   910                           ;main.c: 76: }
   911  00F5  3000               	movlw	0
   912  00F6  1806               	btfsc	6,0	;volatile
   913  00F7  3001               	movlw	1
   914  00F8  00F9               	movwf	_AR1
   915  00F9                     i1l1045:
   916                           
   917                           ;main.c: 77: 
   918  00F9  0879               	movf	_AR1,w
   919  00FA  1D03               	btfss	3,2
   920  00FB  28FD               	goto	u21_21
   921  00FC  28FE               	goto	u21_20
   922  00FD                     u21_21:
   923  00FD  28FF               	goto	i1l1049
   924  00FE                     u21_20:
   925  00FE                     i1l1047:
   926                           
   927                           ;main.c: 78: void Setup(void){
   928  00FE  01A1               	clrf	_AR2
   929  00FF                     i1l1049:
   930                           
   931                           ;main.c: 80:     PORTA = 0;
   932  00FF  0821               	movf	_AR2,w
   933  0100  1D03               	btfss	3,2
   934  0101  2903               	goto	u22_21
   935  0102  2904               	goto	u22_20
   936  0103                     u22_21:
   937  0103  290F               	goto	i1l1057
   938  0104                     u22_20:
   939  0104                     i1l1051:
   940                           
   941                           ;main.c: 81:     PORTB = 0;
   942  0104  0379               	decf	_AR1,w
   943  0105  1D03               	btfss	3,2
   944  0106  2908               	goto	u23_21
   945  0107  2909               	goto	u23_20
   946  0108                     u23_21:
   947  0108  290F               	goto	i1l1057
   948  0109                     u23_20:
   949  0109                     i1l1053:
   950                           
   951                           ;main.c: 82:     PORTC = 0;
   952  0109  3001               	movlw	1
   953  010A  00F3               	movwf	??_ISR
   954  010B  0873               	movf	??_ISR,w
   955  010C  0788               	addwf	8,f	;volatile
   956  010D                     i1l1055:
   957                           
   958                           ;main.c: 83:     PORTD = 0;
   959  010D  01A1               	clrf	_AR2
   960  010E  0AA1               	incf	_AR2,f
   961  010F                     i1l1057:
   962                           
   963                           ;main.c: 86:     ANSELbits.ANS0 = 1;
   964  010F  3000               	movlw	0
   965  0110  1886               	btfsc	6,1	;volatile
   966  0111  3001               	movlw	1
   967  0112  00F8               	movwf	_AR3
   968  0113                     i1l1059:
   969                           
   970                           ;main.c: 87:     ANSELH = 0;
   971  0113  0878               	movf	_AR3,w
   972  0114  1D03               	btfss	3,2
   973  0115  2917               	goto	u24_21
   974  0116  2918               	goto	u24_20
   975  0117                     u24_21:
   976  0117  2919               	goto	i1l1063
   977  0118                     u24_20:
   978  0118                     i1l1061:
   979                           
   980                           ;main.c: 88:     TRISA = 1;
   981  0118  01A0               	clrf	_AR4
   982  0119                     i1l1063:
   983                           
   984                           ;main.c: 90:     TRISC = 0;
   985  0119  0820               	movf	_AR4,w
   986  011A  1D03               	btfss	3,2
   987  011B  291D               	goto	u25_21
   988  011C  291E               	goto	u25_20
   989  011D                     u25_21:
   990  011D  2927               	goto	i1l94
   991  011E                     u25_20:
   992  011E                     i1l1065:
   993                           
   994                           ;main.c: 91:     TRISD = 0;
   995  011E  0378               	decf	_AR3,w
   996  011F  1D03               	btfss	3,2
   997  0120  2922               	goto	u26_21
   998  0121  2923               	goto	u26_20
   999  0122                     u26_21:
  1000  0122  2927               	goto	i1l94
  1001  0123                     u26_20:
  1002  0123                     i1l1067:
  1003                           
  1004                           ;main.c: 92:     TRISE = 0;
  1005  0123  3001               	movlw	1
  1006  0124  0288               	subwf	8,f	;volatile
  1007  0125                     i1l1069:
  1008                           
  1009                           ;main.c: 93:     INTCONbits.TMR0IF = 0;
  1010  0125  01A0               	clrf	_AR4
  1011  0126  0AA0               	incf	_AR4,f
  1012  0127                     i1l94:
  1013  0127  0877               	movf	??_ISR+4,w
  1014  0128  008A               	movwf	10
  1015  0129  0876               	movf	??_ISR+3,w
  1016  012A  0084               	movwf	4
  1017  012B  0E75               	swapf	??_ISR+2,w
  1018  012C  0083               	movwf	3
  1019  012D  0EFE               	swapf	btemp,f
  1020  012E  0E7E               	swapf	btemp,w
  1021  012F  0009               	retfie
  1022  0130                     __end_of_ISR:
  1023                           
  1024                           	psect	intentry
  1025  0004                     __pintentry:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1028                           
  1029  0004                     interrupt_function:
  1030  007E                     saved_w	set	btemp
  1031  0004  00FE               	movwf	btemp
  1032  0005  0E03               	swapf	3,w
  1033  0006  00F5               	movwf	??_ISR+2
  1034  0007  0804               	movf	4,w
  1035  0008  00F6               	movwf	??_ISR+3
  1036  0009  080A               	movf	10,w
  1037  000A  00F7               	movwf	??_ISR+4
  1038  000B  120A  118A  28AD   	ljmp	_ISR
  1039                           
  1040                           	psect	text5
  1041  0020                     __ptext5:	
  1042 ;; *************** function _tabla *****************
  1043 ;; Defined at:
  1044 ;;		line 4 in file "segments.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  dec             1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  dec             1    2[COMMON] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0
  1061 ;;      Totals:         3       0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_ISR
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _tabla
  1073  0020                     _tabla:
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1077                           ;tabla@dec stored from wreg
  1078  0020  00F2               	movwf	tabla@dec
  1079  0021                     i1l911:
  1080                           
  1081                           ;segments.c: 5:     switch (dec){
  1082  0021  2872               	goto	i1l947
  1083  0022                     i1l913:
  1084                           
  1085                           ;segments.c: 7:             PORTC = 0b00111111;
  1086  0022  303F               	movlw	63
  1087  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0025  0087               	movwf	7	;volatile
  1090                           
  1091                           ;segments.c: 8:             break;
  1092  0026  28AC               	goto	i1l137
  1093  0027                     i1l915:
  1094                           
  1095                           ;segments.c: 10:             PORTC = 0b00000110;
  1096  0027  3006               	movlw	6
  1097  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1099  002A  0087               	movwf	7	;volatile
  1100                           
  1101                           ;segments.c: 11:             break;
  1102  002B  28AC               	goto	i1l137
  1103  002C                     i1l917:
  1104                           
  1105                           ;segments.c: 13:             PORTC = 0b01011011;
  1106  002C  305B               	movlw	91
  1107  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1108  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1109  002F  0087               	movwf	7	;volatile
  1110                           
  1111                           ;segments.c: 14:             break;
  1112  0030  28AC               	goto	i1l137
  1113  0031                     i1l919:
  1114                           
  1115                           ;segments.c: 16:             PORTC = 0b01001111;
  1116  0031  304F               	movlw	79
  1117  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0034  0087               	movwf	7	;volatile
  1120                           
  1121                           ;segments.c: 17:             break;
  1122  0035  28AC               	goto	i1l137
  1123  0036                     i1l921:
  1124                           
  1125                           ;segments.c: 19:             PORTC = 0b01100110;
  1126  0036  3066               	movlw	102
  1127  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0039  0087               	movwf	7	;volatile
  1130                           
  1131                           ;segments.c: 20:             break;
  1132  003A  28AC               	goto	i1l137
  1133  003B                     i1l923:
  1134                           
  1135                           ;segments.c: 22:             PORTC = 0b01101101;
  1136  003B  306D               	movlw	109
  1137  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1138  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1139  003E  0087               	movwf	7	;volatile
  1140                           
  1141                           ;segments.c: 23:             break;
  1142  003F  28AC               	goto	i1l137
  1143  0040                     i1l925:
  1144                           
  1145                           ;segments.c: 25:             PORTC = 0b01111101;
  1146  0040  307D               	movlw	125
  1147  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0043  0087               	movwf	7	;volatile
  1150                           
  1151                           ;segments.c: 26:             break;
  1152  0044  28AC               	goto	i1l137
  1153  0045                     i1l927:
  1154                           
  1155                           ;segments.c: 28:             PORTC = 0b00000111;
  1156  0045  3007               	movlw	7
  1157  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0048  0087               	movwf	7	;volatile
  1160                           
  1161                           ;segments.c: 29:             break;
  1162  0049  28AC               	goto	i1l137
  1163  004A                     i1l929:
  1164                           
  1165                           ;segments.c: 31:             PORTC = 0b01111111;
  1166  004A  307F               	movlw	127
  1167  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1168  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1169  004D  0087               	movwf	7	;volatile
  1170                           
  1171                           ;segments.c: 32:             break;
  1172  004E  28AC               	goto	i1l137
  1173  004F                     i1l931:
  1174                           
  1175                           ;segments.c: 34:             PORTC = 0b01101111;
  1176  004F  306F               	movlw	111
  1177  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0052  0087               	movwf	7	;volatile
  1180                           
  1181                           ;segments.c: 35:             break;
  1182  0053  28AC               	goto	i1l137
  1183  0054                     i1l933:
  1184                           
  1185                           ;segments.c: 37:             PORTC = 0b01110111;
  1186  0054  3077               	movlw	119
  1187  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0057  0087               	movwf	7	;volatile
  1190                           
  1191                           ;segments.c: 38:             break;
  1192  0058  28AC               	goto	i1l137
  1193  0059                     i1l935:
  1194                           
  1195                           ;segments.c: 40:             PORTC = 0b01111100;
  1196  0059  307C               	movlw	124
  1197  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1198  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1199  005C  0087               	movwf	7	;volatile
  1200                           
  1201                           ;segments.c: 41:             break;
  1202  005D  28AC               	goto	i1l137
  1203  005E                     i1l937:
  1204                           
  1205                           ;segments.c: 43:             PORTC = 0b00111001;
  1206  005E  3039               	movlw	57
  1207  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0061  0087               	movwf	7	;volatile
  1210                           
  1211                           ;segments.c: 44:             break;
  1212  0062  28AC               	goto	i1l137
  1213  0063                     i1l939:
  1214                           
  1215                           ;segments.c: 46:             PORTC = 0b01011110;
  1216  0063  305E               	movlw	94
  1217  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0066  0087               	movwf	7	;volatile
  1220                           
  1221                           ;segments.c: 47:             break;
  1222  0067  28AC               	goto	i1l137
  1223  0068                     i1l941:
  1224                           
  1225                           ;segments.c: 49:             PORTC = 0b01111001;
  1226  0068  3079               	movlw	121
  1227  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1228  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1229  006B  0087               	movwf	7	;volatile
  1230                           
  1231                           ;segments.c: 50:             break;
  1232  006C  28AC               	goto	i1l137
  1233  006D                     i1l943:
  1234                           
  1235                           ;segments.c: 52:             PORTC = 0b01110001;
  1236  006D  3071               	movlw	113
  1237  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0070  0087               	movwf	7	;volatile
  1240                           
  1241                           ;segments.c: 53:             break;
  1242  0071  28AC               	goto	i1l137
  1243  0072                     i1l947:
  1244  0072  0872               	movf	tabla@dec,w
  1245  0073  00F0               	movwf	??_tabla
  1246  0074  01F1               	clrf	??_tabla+1
  1247                           
  1248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1249                           ; Switch size 1, requested type "simple"
  1250                           ; Number of cases is 1, Range of values is 0 to 0
  1251                           ; switch strategies available:
  1252                           ; Name         Instructions Cycles
  1253                           ; simple_byte            4     3 (average)
  1254                           ; direct_byte           11     8 (fixed)
  1255                           ; jumptable            260     6 (fixed)
  1256                           ;	Chosen strategy is simple_byte
  1257  0075  0871               	movf	??_tabla+1,w
  1258  0076  3A00               	xorlw	0	; case 0
  1259  0077  1903               	skipnz
  1260  0078  287A               	goto	i1l1093
  1261  0079  28AC               	goto	i1l137
  1262  007A                     i1l1093:
  1263                           
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 16, Range of values is 0 to 15
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte           49    25 (average)
  1269                           ; direct_byte           56     8 (fixed)
  1270                           ; jumptable            260     6 (fixed)
  1271                           ;	Chosen strategy is simple_byte
  1272  007A  0870               	movf	??_tabla,w
  1273  007B  3A00               	xorlw	0	; case 0
  1274  007C  1903               	skipnz
  1275  007D  2822               	goto	i1l913
  1276  007E  3A01               	xorlw	1	; case 1
  1277  007F  1903               	skipnz
  1278  0080  2827               	goto	i1l915
  1279  0081  3A03               	xorlw	3	; case 2
  1280  0082  1903               	skipnz
  1281  0083  282C               	goto	i1l917
  1282  0084  3A01               	xorlw	1	; case 3
  1283  0085  1903               	skipnz
  1284  0086  2831               	goto	i1l919
  1285  0087  3A07               	xorlw	7	; case 4
  1286  0088  1903               	skipnz
  1287  0089  2836               	goto	i1l921
  1288  008A  3A01               	xorlw	1	; case 5
  1289  008B  1903               	skipnz
  1290  008C  283B               	goto	i1l923
  1291  008D  3A03               	xorlw	3	; case 6
  1292  008E  1903               	skipnz
  1293  008F  2840               	goto	i1l925
  1294  0090  3A01               	xorlw	1	; case 7
  1295  0091  1903               	skipnz
  1296  0092  2845               	goto	i1l927
  1297  0093  3A0F               	xorlw	15	; case 8
  1298  0094  1903               	skipnz
  1299  0095  284A               	goto	i1l929
  1300  0096  3A01               	xorlw	1	; case 9
  1301  0097  1903               	skipnz
  1302  0098  284F               	goto	i1l931
  1303  0099  3A03               	xorlw	3	; case 10
  1304  009A  1903               	skipnz
  1305  009B  2854               	goto	i1l933
  1306  009C  3A01               	xorlw	1	; case 11
  1307  009D  1903               	skipnz
  1308  009E  2859               	goto	i1l935
  1309  009F  3A07               	xorlw	7	; case 12
  1310  00A0  1903               	skipnz
  1311  00A1  285E               	goto	i1l937
  1312  00A2  3A01               	xorlw	1	; case 13
  1313  00A3  1903               	skipnz
  1314  00A4  2863               	goto	i1l939
  1315  00A5  3A03               	xorlw	3	; case 14
  1316  00A6  1903               	skipnz
  1317  00A7  2868               	goto	i1l941
  1318  00A8  3A01               	xorlw	1	; case 15
  1319  00A9  1903               	skipnz
  1320  00AA  286D               	goto	i1l943
  1321  00AB  28AC               	goto	i1l137
  1322  00AC                     i1l137:
  1323  00AC  0008               	return
  1324  00AD                     __end_of_tabla:
  1325  007E                     btemp	set	126	;btemp
  1326  007E                     wtemp0	set	126
  1327                           
  1328                           	psect	config
  1329                           
  1330                           ;Config register CONFIG1 @ 0x2007
  1331                           ;	Oscillator Selection bits
  1332                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1333                           ;	Watchdog Timer Enable bit
  1334                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1335                           ;	Power-up Timer Enable bit
  1336                           ;	PWRTE = OFF, PWRT disabled
  1337                           ;	RE3/MCLR pin function select bit
  1338                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1339                           ;	Code Protection bit
  1340                           ;	CP = OFF, Program memory code protection is disabled
  1341                           ;	Data Code Protection bit
  1342                           ;	CPD = OFF, Data memory code protection is disabled
  1343                           ;	Brown Out Reset Selection bits
  1344                           ;	BOREN = OFF, BOR disabled
  1345                           ;	Internal External Switchover bit
  1346                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1347                           ;	Fail-Safe Clock Monitor Enabled bit
  1348                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1349                           ;	Low Voltage Programming Enable bit
  1350                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1351                           ;	In-Circuit Debugger Mode bit
  1352                           ;	DEBUG = 0x1, unprogrammed default
  1353  2007                     	org	8199
  1354  2007  20D1               	dw	8401
  1355                           
  1356                           ;Config register CONFIG2 @ 0x2008
  1357                           ;	Brown-out Reset Selection bit
  1358                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1359                           ;	Flash Program Memory Self Write Enable bits
  1360                           ;	WRT = OFF, Write protection off
  1361  2008                     	org	8200
  1362  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                              _Alarm
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0      22
                                              3 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (3) _tabla                                                3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _Alarm
   _Setup

 _ISR (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 03:04:39 2021

                     l99 0168                      l112 0180                      l105 0162  
                    l114 0181                      l109 018C                      _ADC 0182  
                    _AR1 0079                      _AR2 0021                      _AR3 0078  
                    _AR4 0020                      l961 0145                      l953 0130  
                    l971 014A                      l963 0146                      l955 013A  
                    l981 014F                      l973 014B                      l965 0147  
                    l957 013C                      l991 015C                      l983 0152  
                    l975 014C                      l967 0148                      l959 0140  
                    l993 015E                      l985 0155                      l977 014D  
                    l969 0149                      l995 0182                      l987 0156  
                    l979 014E                      l997 0188                      l989 0158  
                    l999 0189                      u140 0188                      u141 0187  
                    u150 017E                      u151 017D                      _ISR 00AD  
                    _mux 007C                      fsr0 0004                     ?_ADC 0070  
                   ?_ISR 0070                     l1001 0176                     l1003 017E  
                   l1071 0163                     i1l94 0127                     _TMR0 0001  
                   _main 0163                     btemp 007E                     start 000E  
                  ??_ADC 0000                    ??_ISR 0073                    ?_main 0070  
                  _ANSEL 0188                    i1l137 00AC                    i1l911 0021  
                  i1l921 0036                    i1l913 0022                    i1l931 004F  
                  i1l923 003B                    i1l915 0027                    i1l941 0068  
                  i1l933 0054                    i1l925 0040                    i1l917 002C  
                  i1l943 006D                    i1l935 0059                    i1l927 0045  
                  i1l919 0031                    i1l937 005E                    i1l929 004A  
                  i1l939 0063                    i1l947 0072                    u20_20 00F4  
                  u20_21 00F3                    u21_20 00FE                    u21_21 00FD  
                  u22_20 0104                    u22_21 0103                    u23_20 0109  
                  u23_21 0108                    u24_20 0118                    u16_20 00B1  
                  u24_21 0117                    u16_21 00B0                    u25_20 011E  
                  u17_20 00C1                    u25_21 011D                    u17_21 00C0  
                  u26_20 0123                    u26_21 0122                    u18_25 00C7  
                  u19_20 00EB                    u19_21 00EA                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Alarm 0176                    _Setup 0130                    _anlec 007D  
                  _tabla 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0176  
                 ??_main 0000                   ?_Alarm 0070                   ?_Setup 0070  
                 _ADCON0 001F                   _ADCON1 009F                   ?_tabla 0070  
                 _ADRESH 001E                   _ANSELH 0189                   i1l1011 00B6  
                 i1l1021 00C4                   i1l1013 00BA                   i1l1005 00AD  
                 i1l1031 00DF                   i1l1023 00D1                   i1l1015 00BB  
                 i1l1007 00B1                   i1l1041 00F4                   i1l1025 00D8  
                 i1l1017 00BC                   i1l1009 00B2                   i1l1033 00E5  
                 i1l1051 0104                   i1l1043 00F5                   i1l1035 00EB  
                 i1l1027 00D9                   i1l1019 00C1                   i1l1061 0118  
                 i1l1053 0109                   i1l1045 00F9                   i1l1037 00EC  
                 i1l1029 00DA                   i1l1063 0119                   i1l1055 010D  
                 i1l1047 00FE                   i1l1039 00F0                   i1l1065 011E  
                 i1l1057 010F                   i1l1049 00FF                   i1l1067 0123  
                 i1l1059 0113                   i1l1093 007A                   i1l1069 0125  
                 _nowadc 007B                   saved_w 007E  __end_of__initialization 001C  
          __end_of_Alarm 0182           __pcstackCOMMON 0070            __end_of_Setup 0163  
          __end_of_tabla 00AD                  ??_Alarm 0000                  ??_Setup 0000  
                ??_tabla 0070               __pbssBANK0 0020               __pmaintext 0163  
             __pintentry 0004                  _HNibble 007A                  _LNibble 0022  
              _ANSELbits 0188                  __ptext1 0130                  __ptext2 0176  
                __ptext3 0182                  __ptext4 00AD                  __ptext5 0020  
           __size_of_ADC 000B             __size_of_ISR 0083     end_of_initialization 001C  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 0011  
            __end_of_ADC 018D              __end_of_ISR 0130              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0000           __size_of_Alarm 000C  
         __size_of_Setup 0033           __size_of_tabla 008D        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C               _ADCON0bits 001F  
               _WPUBbits 0095            __size_of_main 0013               _INTCONbits 000B  
               tabla@dec 0072                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081  
