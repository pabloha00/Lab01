

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 21 21:15:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  001F                     _ADCON0bits	set	31
   288  001F                     _ADCON0	set	31
   289  0009                     _PORTE	set	9
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  0008                     _PORTD	set	8
   294  0006                     _PORTBbits	set	6
   295  001E                     _ADRESH	set	30
   296  000C                     _PIR1bits	set	12
   297  0009                     _PORTEbits	set	9
   298  0001                     _TMR0	set	1
   299  000B                     _INTCONbits	set	11
   300  0081                     _OPTION_REG	set	129
   301  009F                     _ADCON1	set	159
   302  008F                     _OSCCONbits	set	143
   303  0095                     _WPUBbits	set	149
   304  0096                     _IOCBbits	set	150
   305  0089                     _TRISE	set	137
   306  0088                     _TRISD	set	136
   307  0087                     _TRISC	set	135
   308  0086                     _TRISB	set	134
   309  0085                     _TRISA	set	133
   310  0189                     _ANSELH	set	393
   311  0188                     _ANSELbits	set	392
   312  0188                     _ANSEL	set	392
   313                           
   314                           	psect	cinit
   315  0011                     start_initialization:	
   316                           ; #config settings
   317                           
   318  0011                     __initialization:
   319                           
   320                           ; Clear objects allocated to COMMON
   321  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   322  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   323  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   324  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   325  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   326  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  0017  1283               	bcf	3,5	;RP0=0, select bank0
   330  0018  1303               	bcf	3,6	;RP1=0, select bank0
   331  0019  01A0               	clrf	__pbssBANK0& (0+127)
   332  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   333  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   334  001C                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337  001C                     __end_of__initialization:
   338  001C  0183               	clrf	3
   339  001D  120A  118A  2963   	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMMON
   342  0078                     __pbssCOMMON:
   343  0078                     _AR3:
   344  0078                     	ds	1
   345  0079                     _AR1:
   346  0079                     	ds	1
   347  007A                     _HNibble:
   348  007A                     	ds	1
   349  007B                     _nowadc:
   350  007B                     	ds	1
   351  007C                     _mux:
   352  007C                     	ds	1
   353  007D                     _anlec:
   354  007D                     	ds	1
   355                           
   356                           	psect	bssBANK0
   357  0020                     __pbssBANK0:
   358  0020                     _AR4:
   359  0020                     	ds	1
   360  0021                     _AR2:
   361  0021                     	ds	1
   362  0022                     _LNibble:
   363  0022                     	ds	1
   364                           
   365                           	psect	cstackCOMMON
   366  0070                     __pcstackCOMMON:
   367  0070                     ?_tabla:
   368  0070                     ??_tabla:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_Setup:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_ADC:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_Alarm:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_ISR:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 1 bytes @ 0x0
   388  0070                     	ds	2
   389  0072                     tabla@dec:
   390                           
   391                           ; 1 bytes @ 0x2
   392  0072                     	ds	1
   393  0073                     ??_ISR:
   394                           
   395                           ; 1 bytes @ 0x3
   396  0073                     	ds	5
   397                           
   398                           	psect	cstackBANK0
   399  0000                     __pcstackBANK0:
   400  0000                     ??_Setup:
   401  0000                     ??_ADC:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0000                     ??_Alarm:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0000                     ??_main:	
   408                           ; 1 bytes @ 0x0
   409                           
   410                           
   411                           	psect	maintext
   412  0163                     __pmaintext:	
   413                           ; 1 bytes @ 0x0
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 100 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels required when called: 3
   439 ;; This function calls:
   440 ;;		_ADC
   441 ;;		_Alarm
   442 ;;		_Setup
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  0163                     _main:
   451  0163                     l1071:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;main.c: 101:     WPUBbits.WPUB0 = 1;
   457  0163  120A  118A  2130  120A  118A  	fcall	_Setup
   458  0168                     l99:	
   459                           ;main.c: 102:     WPUBbits.WPUB1 = 1;
   460                           
   461                           
   462                           ;main.c: 103:     PIR1bits.ADIF = 0;
   463  0168  120A  118A  2182  120A  118A  	fcall	_ADC
   464                           
   465                           ;main.c: 104:     OSCCONbits.IRCF0 = 0;
   466  016D  120A  118A  2176  120A  118A  	fcall	_Alarm
   467  0172  2968               	goto	l99
   468  0173  120A  118A  280E   	ljmp	start
   469  0176                     __end_of_main:
   470                           
   471                           	psect	text1
   472  0130                     __ptext1:	
   473 ;; *************** function _Setup *****************
   474 ;; Defined at:
   475 ;;		line 109 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 2
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _Setup
   505  0130                     _Setup:
   506  0130                     l953:	
   507                           ;incstack = 0
   508                           ; Regs used in _Setup: [wreg+status,2]
   509                           
   510                           
   511                           ;main.c: 111: 
   512  0130  1283               	bcf	3,5	;RP0=0, select bank0
   513  0131  1303               	bcf	3,6	;RP1=0, select bank0
   514  0132  0185               	clrf	5	;volatile
   515                           
   516                           ;main.c: 112: 
   517  0133  0186               	clrf	6	;volatile
   518                           
   519                           ;main.c: 113:     OPTION_REG = 0b01010111;
   520  0134  0187               	clrf	7	;volatile
   521                           
   522                           ;main.c: 114: }
   523  0135  0188               	clrf	8	;volatile
   524                           
   525                           ;main.c: 115: 
   526  0136  0189               	clrf	9	;volatile
   527                           
   528                           ;main.c: 116: void ADC(void){
   529  0137  1683               	bsf	3,5	;RP0=1, select bank3
   530  0138  1703               	bsf	3,6	;RP1=1, select bank3
   531  0139  0188               	clrf	8	;volatile
   532  013A                     l955:
   533                           
   534                           ;main.c: 117:     if (nowadc > 5){
   535  013A  1408               	bsf	8,0	;volatile
   536                           
   537                           ;main.c: 118:      nowadc = 0;
   538  013B  0189               	clrf	9	;volatile
   539  013C                     l957:
   540                           
   541                           ;main.c: 119:      ADCON0bits.GO_nDONE = 1;
   542  013C  3001               	movlw	1
   543  013D  1683               	bsf	3,5	;RP0=1, select bank1
   544  013E  1303               	bcf	3,6	;RP1=0, select bank1
   545  013F  0085               	movwf	5	;volatile
   546  0140                     l959:
   547                           
   548                           ;main.c: 120:     }
   549  0140  30FF               	movlw	255
   550  0141  0086               	movwf	6	;volatile
   551                           
   552                           ;main.c: 121: }
   553  0142  0187               	clrf	7	;volatile
   554                           
   555                           ;main.c: 122: void Alarm(void){
   556  0143  0188               	clrf	8	;volatile
   557                           
   558                           ;main.c: 123:     if(anlec > PORTD){
   559  0144  0189               	clrf	9	;volatile
   560  0145                     l961:
   561                           
   562                           ;main.c: 124:         PORTEbits.RE2 = 1;
   563  0145  110B               	bcf	11,2	;volatile
   564  0146                     l963:
   565                           
   566                           ;main.c: 125:     }
   567  0146  100B               	bcf	11,0	;volatile
   568  0147                     l965:
   569                           
   570                           ;main.c: 126:     else{
   571  0147  178B               	bsf	11,7	;volatile
   572  0148                     l967:
   573                           
   574                           ;main.c: 127:         PORTEbits.RE2 = 0;
   575  0148  170B               	bsf	11,6	;volatile
   576  0149                     l969:
   577                           
   578                           ;main.c: 128:     }
   579  0149  168B               	bsf	11,5	;volatile
   580  014A                     l971:
   581                           
   582                           ;main.c: 129: }
   583  014A  158B               	bsf	11,3	;volatile
   584  014B                     l973:
   585  014B  1416               	bsf	22,0	;volatile
   586  014C                     l975:
   587  014C  1496               	bsf	22,1	;volatile
   588  014D                     l977:
   589  014D  1415               	bsf	21,0	;volatile
   590  014E                     l979:
   591  014E  1495               	bsf	21,1	;volatile
   592  014F                     l981:
   593  014F  1283               	bcf	3,5	;RP0=0, select bank0
   594  0150  1303               	bcf	3,6	;RP1=0, select bank0
   595  0151  130C               	bcf	12,6	;volatile
   596  0152                     l983:
   597  0152  1683               	bsf	3,5	;RP0=1, select bank1
   598  0153  1303               	bcf	3,6	;RP1=0, select bank1
   599  0154  120F               	bcf	15,4	;volatile
   600  0155                     l985:
   601  0155  168F               	bsf	15,5	;volatile
   602  0156                     l987:
   603  0156  170F               	bsf	15,6	;volatile
   604  0157  019F               	clrf	31	;volatile
   605  0158                     l989:
   606  0158  3041               	movlw	65
   607  0159  1283               	bcf	3,5	;RP0=0, select bank0
   608  015A  1303               	bcf	3,6	;RP1=0, select bank0
   609  015B  009F               	movwf	31	;volatile
   610  015C                     l991:
   611  015C  30EC               	movlw	236
   612  015D  0081               	movwf	1	;volatile
   613  015E                     l993:
   614  015E  3057               	movlw	87
   615  015F  1683               	bsf	3,5	;RP0=1, select bank1
   616  0160  1303               	bcf	3,6	;RP1=0, select bank1
   617  0161  0081               	movwf	1	;volatile
   618  0162                     l105:
   619  0162  0008               	return
   620  0163                     __end_of_Setup:
   621                           
   622                           	psect	text2
   623  0176                     __ptext2:	
   624 ;; *************** function _Alarm *****************
   625 ;; Defined at:
   626 ;;		line 153 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 2
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _Alarm
   656  0176                     _Alarm:
   657  0176                     l1001:	
   658                           ;incstack = 0
   659                           ; Regs used in _Alarm: [wreg]
   660                           
   661  0176  087D               	movf	_anlec,w
   662  0177  1283               	bcf	3,5	;RP0=0, select bank0
   663  0178  1303               	bcf	3,6	;RP1=0, select bank0
   664  0179  0208               	subwf	8,w	;volatile
   665  017A  1803               	skipnc
   666  017B  297D               	goto	u151
   667  017C  297E               	goto	u150
   668  017D                     u151:
   669  017D  2980               	goto	l112
   670  017E                     u150:
   671  017E                     l1003:
   672  017E  1509               	bsf	9,2	;volatile
   673  017F  2981               	goto	l114
   674  0180                     l112:
   675  0180  1109               	bcf	9,2	;volatile
   676  0181                     l114:
   677  0181  0008               	return
   678  0182                     __end_of_Alarm:
   679                           
   680                           	psect	text3
   681  0182                     __ptext3:	
   682 ;; *************** function _ADC *****************
   683 ;; Defined at:
   684 ;;		line 147 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 2
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _ADC
   714  0182                     _ADC:
   715  0182                     l995:	
   716                           ;incstack = 0
   717                           ; Regs used in _ADC: [wreg+status,2]
   718                           
   719  0182  3006               	movlw	6
   720  0183  027B               	subwf	_nowadc,w
   721  0184  1C03               	skipc
   722  0185  2987               	goto	u141
   723  0186  2988               	goto	u140
   724  0187                     u141:
   725  0187  298C               	goto	l109
   726  0188                     u140:
   727  0188                     l997:
   728  0188  01FB               	clrf	_nowadc
   729  0189                     l999:
   730  0189  1283               	bcf	3,5	;RP0=0, select bank0
   731  018A  1303               	bcf	3,6	;RP1=0, select bank0
   732  018B  149F               	bsf	31,1	;volatile
   733  018C                     l109:
   734  018C  0008               	return
   735  018D                     __end_of_ADC:
   736                           
   737                           	psect	text4
   738  00AD                     __ptext4:	
   739 ;; *************** function _ISR *****************
   740 ;; Defined at:
   741 ;;		line 50 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          5       0       0       0       0
   758 ;;      Totals:         5       0       0       0       0
   759 ;;Total ram usage:        5 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 1
   762 ;; This function calls:
   763 ;;		_tabla
   764 ;; This function is called by:
   765 ;;		Interrupt level 1
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _ISR
   771  00AD                     _ISR:
   772  00AD                     i1l1005:
   773                           
   774                           ;main.c: 51:             if (AR1==1){
   775  00AD  1D0B               	btfss	11,2	;volatile
   776  00AE  28B0               	goto	u16_21
   777  00AF  28B1               	goto	u16_20
   778  00B0                     u16_21:
   779  00B0  28E5               	goto	i1l1033
   780  00B1                     u16_20:
   781  00B1                     i1l1007:
   782                           
   783                           ;main.c: 52:                 PORTD++;
   784  00B1  110B               	bcf	11,2	;volatile
   785  00B2                     i1l1009:
   786                           
   787                           ;main.c: 53:                 AR2=1;
   788  00B2  30EC               	movlw	236
   789  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   790  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   791  00B5  0081               	movwf	1	;volatile
   792  00B6                     i1l1011:
   793                           
   794                           ;main.c: 54:             }
   795  00B6  3001               	movlw	1
   796  00B7  00F3               	movwf	??_ISR
   797  00B8  0873               	movf	??_ISR,w
   798  00B9  07FB               	addwf	_nowadc,f
   799  00BA                     i1l1013:
   800                           
   801                           ;main.c: 55:         }
   802  00BA  1009               	bcf	9,0	;volatile
   803  00BB                     i1l1015:
   804                           
   805                           ;main.c: 56:         AR3 = PORTBbits.RB1;
   806  00BB  1089               	bcf	9,1	;volatile
   807  00BC                     i1l1017:
   808                           
   809                           ;main.c: 57:         if (AR3==0){
   810  00BC  087C               	movf	_mux,w
   811  00BD  1D03               	btfss	3,2
   812  00BE  28C0               	goto	u17_21
   813  00BF  28C1               	goto	u17_20
   814  00C0                     u17_21:
   815  00C0  28D8               	goto	i1l1025
   816  00C1                     u17_20:
   817  00C1                     i1l1019:
   818                           
   819                           ;main.c: 58:             AR4=0;
   820  00C1  01FC               	clrf	_mux
   821  00C2  0AFC               	incf	_mux,f
   822                           
   823                           ;main.c: 59:         }
   824  00C3  1409               	bsf	9,0	;volatile
   825  00C4                     i1l1021:
   826                           
   827                           ;main.c: 60:         if (AR4==0){
   828  00C4  087D               	movf	_anlec,w
   829  00C5  00F3               	movwf	??_ISR
   830  00C6  3004               	movlw	4
   831  00C7                     u18_25:
   832  00C7  1003               	clrc
   833  00C8  0CF3               	rrf	??_ISR,f
   834  00C9  3EFF               	addlw	-1
   835  00CA  1D03               	skipz
   836  00CB  28C7               	goto	u18_25
   837  00CC  0873               	movf	??_ISR,w
   838  00CD  390F               	andlw	15
   839  00CE  00F4               	movwf	??_ISR+1
   840  00CF  0874               	movf	??_ISR+1,w
   841  00D0  00FA               	movwf	_HNibble
   842  00D1                     i1l1023:
   843                           
   844                           ;main.c: 61:             if (AR3==1){
   845  00D1  087A               	movf	_HNibble,w
   846  00D2  120A  118A  2020  120A  118A  	fcall	_tabla
   847                           
   848                           ;main.c: 62:                 PORTD--;
   849  00D7  28E5               	goto	i1l1033
   850  00D8                     i1l1025:
   851                           
   852                           ;main.c: 64:             }
   853  00D8  01FC               	clrf	_mux
   854  00D9                     i1l1027:
   855                           
   856                           ;main.c: 65:         }
   857  00D9  1489               	bsf	9,1	;volatile
   858  00DA                     i1l1029:
   859                           
   860                           ;main.c: 66:     }
   861  00DA  087D               	movf	_anlec,w
   862  00DB  390F               	andlw	15
   863  00DC  00F3               	movwf	??_ISR
   864  00DD  0873               	movf	??_ISR,w
   865  00DE  00A2               	movwf	_LNibble
   866  00DF                     i1l1031:
   867                           
   868                           ;main.c: 67: }
   869  00DF  0822               	movf	_LNibble,w
   870  00E0  120A  118A  2020  120A  118A  	fcall	_tabla
   871  00E5                     i1l1033:
   872                           
   873                           ;main.c: 70:     Setup();
   874  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   875  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   876  00E7  1F0C               	btfss	12,6	;volatile
   877  00E8  28EA               	goto	u19_21
   878  00E9  28EB               	goto	u19_20
   879  00EA                     u19_21:
   880  00EA  28F0               	goto	i1l1039
   881  00EB                     u19_20:
   882  00EB                     i1l1035:
   883                           
   884                           ;main.c: 71:     while (1){
   885  00EB  130C               	bcf	12,6	;volatile
   886  00EC                     i1l1037:
   887                           
   888                           ;main.c: 72:     ADC();
   889  00EC  081E               	movf	30,w	;volatile
   890  00ED  00F3               	movwf	??_ISR
   891  00EE  0873               	movf	??_ISR,w
   892  00EF  00FD               	movwf	_anlec
   893  00F0                     i1l1039:
   894                           
   895                           ;main.c: 75: }
   896  00F0  1C0B               	btfss	11,0	;volatile
   897  00F1  28F3               	goto	u20_21
   898  00F2  28F4               	goto	u20_20
   899  00F3                     u20_21:
   900  00F3  2927               	goto	i1l94
   901  00F4                     u20_20:
   902  00F4                     i1l1041:
   903                           
   904                           ;main.c: 76: }
   905  00F4  100B               	bcf	11,0	;volatile
   906  00F5                     i1l1043:
   907                           
   908                           ;main.c: 77: 
   909  00F5  3000               	movlw	0
   910  00F6  1806               	btfsc	6,0	;volatile
   911  00F7  3001               	movlw	1
   912  00F8  00F9               	movwf	_AR1
   913  00F9                     i1l1045:
   914                           
   915                           ;main.c: 78: void Setup(void){
   916  00F9  0879               	movf	_AR1,w
   917  00FA  1D03               	btfss	3,2
   918  00FB  28FD               	goto	u21_21
   919  00FC  28FE               	goto	u21_20
   920  00FD                     u21_21:
   921  00FD  28FF               	goto	i1l1049
   922  00FE                     u21_20:
   923  00FE                     i1l1047:
   924                           
   925                           ;main.c: 79: 
   926  00FE  01A1               	clrf	_AR2
   927  00FF                     i1l1049:
   928                           
   929                           ;main.c: 81:     PORTB = 0;
   930  00FF  0821               	movf	_AR2,w
   931  0100  1D03               	btfss	3,2
   932  0101  2903               	goto	u22_21
   933  0102  2904               	goto	u22_20
   934  0103                     u22_21:
   935  0103  290F               	goto	i1l1057
   936  0104                     u22_20:
   937  0104                     i1l1051:
   938                           
   939                           ;main.c: 82:     PORTC = 0;
   940  0104  0379               	decf	_AR1,w
   941  0105  1D03               	btfss	3,2
   942  0106  2908               	goto	u23_21
   943  0107  2909               	goto	u23_20
   944  0108                     u23_21:
   945  0108  290F               	goto	i1l1057
   946  0109                     u23_20:
   947  0109                     i1l1053:
   948                           
   949                           ;main.c: 83:     PORTD = 0;
   950  0109  3001               	movlw	1
   951  010A  00F3               	movwf	??_ISR
   952  010B  0873               	movf	??_ISR,w
   953  010C  0788               	addwf	8,f	;volatile
   954  010D                     i1l1055:
   955                           
   956                           ;main.c: 84:     PORTE = 0;
   957  010D  01A1               	clrf	_AR2
   958  010E  0AA1               	incf	_AR2,f
   959  010F                     i1l1057:
   960                           
   961                           ;main.c: 87:     ANSELH = 0;
   962  010F  3000               	movlw	0
   963  0110  1886               	btfsc	6,1	;volatile
   964  0111  3001               	movlw	1
   965  0112  00F8               	movwf	_AR3
   966  0113                     i1l1059:
   967                           
   968                           ;main.c: 88:     TRISA = 1;
   969  0113  0878               	movf	_AR3,w
   970  0114  1D03               	btfss	3,2
   971  0115  2917               	goto	u24_21
   972  0116  2918               	goto	u24_20
   973  0117                     u24_21:
   974  0117  2919               	goto	i1l1063
   975  0118                     u24_20:
   976  0118                     i1l1061:
   977                           
   978                           ;main.c: 89:     TRISB = 0b11111111;
   979  0118  01A0               	clrf	_AR4
   980  0119                     i1l1063:
   981                           
   982                           ;main.c: 91:     TRISD = 0;
   983  0119  0820               	movf	_AR4,w
   984  011A  1D03               	btfss	3,2
   985  011B  291D               	goto	u25_21
   986  011C  291E               	goto	u25_20
   987  011D                     u25_21:
   988  011D  2927               	goto	i1l94
   989  011E                     u25_20:
   990  011E                     i1l1065:
   991                           
   992                           ;main.c: 92:     TRISE = 0;
   993  011E  0378               	decf	_AR3,w
   994  011F  1D03               	btfss	3,2
   995  0120  2922               	goto	u26_21
   996  0121  2923               	goto	u26_20
   997  0122                     u26_21:
   998  0122  2927               	goto	i1l94
   999  0123                     u26_20:
  1000  0123                     i1l1067:
  1001                           
  1002                           ;main.c: 93:     INTCONbits.TMR0IF = 0;
  1003  0123  3001               	movlw	1
  1004  0124  0288               	subwf	8,f	;volatile
  1005  0125                     i1l1069:
  1006                           
  1007                           ;main.c: 94:     INTCONbits.RBIF = 0;
  1008  0125  01A0               	clrf	_AR4
  1009  0126  0AA0               	incf	_AR4,f
  1010  0127                     i1l94:
  1011  0127  0877               	movf	??_ISR+4,w
  1012  0128  008A               	movwf	10
  1013  0129  0876               	movf	??_ISR+3,w
  1014  012A  0084               	movwf	4
  1015  012B  0E75               	swapf	??_ISR+2,w
  1016  012C  0083               	movwf	3
  1017  012D  0EFE               	swapf	btemp,f
  1018  012E  0E7E               	swapf	btemp,w
  1019  012F  0009               	retfie
  1020  0130                     __end_of_ISR:
  1021                           
  1022                           	psect	intentry
  1023  0004                     __pintentry:	
  1024                           ;incstack = 0
  1025                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1026                           
  1027  0004                     interrupt_function:
  1028  007E                     saved_w	set	btemp
  1029  0004  00FE               	movwf	btemp
  1030  0005  0E03               	swapf	3,w
  1031  0006  00F5               	movwf	??_ISR+2
  1032  0007  0804               	movf	4,w
  1033  0008  00F6               	movwf	??_ISR+3
  1034  0009  080A               	movf	10,w
  1035  000A  00F7               	movwf	??_ISR+4
  1036  000B  120A  118A  28AD   	ljmp	_ISR
  1037                           
  1038                           	psect	text5
  1039  0020                     __ptext5:	
  1040 ;; *************** function _tabla *****************
  1041 ;; Defined at:
  1042 ;;		line 4 in file "segments.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  dec             1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  dec             1    2[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0
  1058 ;;      Temps:          2       0       0       0       0
  1059 ;;      Totals:         3       0       0       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_ISR
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _tabla
  1071  0020                     _tabla:
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1075                           ;tabla@dec stored from wreg
  1076  0020  00F2               	movwf	tabla@dec
  1077  0021                     i1l911:
  1078                           
  1079                           ;segments.c: 5:     switch (dec){
  1080  0021  2872               	goto	i1l947
  1081  0022                     i1l913:
  1082                           
  1083                           ;segments.c: 7:             PORTC = 0b00111111;
  1084  0022  303F               	movlw	63
  1085  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0025  0087               	movwf	7	;volatile
  1088                           
  1089                           ;segments.c: 8:             break;
  1090  0026  28AC               	goto	i1l137
  1091  0027                     i1l915:
  1092                           
  1093                           ;segments.c: 10:             PORTC = 0b00000110;
  1094  0027  3006               	movlw	6
  1095  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1097  002A  0087               	movwf	7	;volatile
  1098                           
  1099                           ;segments.c: 11:             break;
  1100  002B  28AC               	goto	i1l137
  1101  002C                     i1l917:
  1102                           
  1103                           ;segments.c: 13:             PORTC = 0b01011011;
  1104  002C  305B               	movlw	91
  1105  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1106  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1107  002F  0087               	movwf	7	;volatile
  1108                           
  1109                           ;segments.c: 14:             break;
  1110  0030  28AC               	goto	i1l137
  1111  0031                     i1l919:
  1112                           
  1113                           ;segments.c: 16:             PORTC = 0b01001111;
  1114  0031  304F               	movlw	79
  1115  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0034  0087               	movwf	7	;volatile
  1118                           
  1119                           ;segments.c: 17:             break;
  1120  0035  28AC               	goto	i1l137
  1121  0036                     i1l921:
  1122                           
  1123                           ;segments.c: 19:             PORTC = 0b01100110;
  1124  0036  3066               	movlw	102
  1125  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0039  0087               	movwf	7	;volatile
  1128                           
  1129                           ;segments.c: 20:             break;
  1130  003A  28AC               	goto	i1l137
  1131  003B                     i1l923:
  1132                           
  1133                           ;segments.c: 22:             PORTC = 0b01101101;
  1134  003B  306D               	movlw	109
  1135  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1136  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1137  003E  0087               	movwf	7	;volatile
  1138                           
  1139                           ;segments.c: 23:             break;
  1140  003F  28AC               	goto	i1l137
  1141  0040                     i1l925:
  1142                           
  1143                           ;segments.c: 25:             PORTC = 0b01111101;
  1144  0040  307D               	movlw	125
  1145  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0043  0087               	movwf	7	;volatile
  1148                           
  1149                           ;segments.c: 26:             break;
  1150  0044  28AC               	goto	i1l137
  1151  0045                     i1l927:
  1152                           
  1153                           ;segments.c: 28:             PORTC = 0b00000111;
  1154  0045  3007               	movlw	7
  1155  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0048  0087               	movwf	7	;volatile
  1158                           
  1159                           ;segments.c: 29:             break;
  1160  0049  28AC               	goto	i1l137
  1161  004A                     i1l929:
  1162                           
  1163                           ;segments.c: 31:             PORTC = 0b01111111;
  1164  004A  307F               	movlw	127
  1165  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1166  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1167  004D  0087               	movwf	7	;volatile
  1168                           
  1169                           ;segments.c: 32:             break;
  1170  004E  28AC               	goto	i1l137
  1171  004F                     i1l931:
  1172                           
  1173                           ;segments.c: 34:             PORTC = 0b01101111;
  1174  004F  306F               	movlw	111
  1175  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0052  0087               	movwf	7	;volatile
  1178                           
  1179                           ;segments.c: 35:             break;
  1180  0053  28AC               	goto	i1l137
  1181  0054                     i1l933:
  1182                           
  1183                           ;segments.c: 37:             PORTC = 0b01110111;
  1184  0054  3077               	movlw	119
  1185  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0057  0087               	movwf	7	;volatile
  1188                           
  1189                           ;segments.c: 38:             break;
  1190  0058  28AC               	goto	i1l137
  1191  0059                     i1l935:
  1192                           
  1193                           ;segments.c: 40:             PORTC = 0b01111100;
  1194  0059  307C               	movlw	124
  1195  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1196  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1197  005C  0087               	movwf	7	;volatile
  1198                           
  1199                           ;segments.c: 41:             break;
  1200  005D  28AC               	goto	i1l137
  1201  005E                     i1l937:
  1202                           
  1203                           ;segments.c: 43:             PORTC = 0b00111001;
  1204  005E  3039               	movlw	57
  1205  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0061  0087               	movwf	7	;volatile
  1208                           
  1209                           ;segments.c: 44:             break;
  1210  0062  28AC               	goto	i1l137
  1211  0063                     i1l939:
  1212                           
  1213                           ;segments.c: 46:             PORTC = 0b01011110;
  1214  0063  305E               	movlw	94
  1215  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0066  0087               	movwf	7	;volatile
  1218                           
  1219                           ;segments.c: 47:             break;
  1220  0067  28AC               	goto	i1l137
  1221  0068                     i1l941:
  1222                           
  1223                           ;segments.c: 49:             PORTC = 0b01111001;
  1224  0068  3079               	movlw	121
  1225  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1226  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1227  006B  0087               	movwf	7	;volatile
  1228                           
  1229                           ;segments.c: 50:             break;
  1230  006C  28AC               	goto	i1l137
  1231  006D                     i1l943:
  1232                           
  1233                           ;segments.c: 52:             PORTC = 0b01110001;
  1234  006D  3071               	movlw	113
  1235  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1236  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0070  0087               	movwf	7	;volatile
  1238                           
  1239                           ;segments.c: 53:             break;
  1240  0071  28AC               	goto	i1l137
  1241  0072                     i1l947:
  1242  0072  0872               	movf	tabla@dec,w
  1243  0073  00F0               	movwf	??_tabla
  1244  0074  01F1               	clrf	??_tabla+1
  1245                           
  1246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 0 to 0
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ; direct_byte           11     8 (fixed)
  1253                           ; jumptable            260     6 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  0075  0871               	movf	??_tabla+1,w
  1256  0076  3A00               	xorlw	0	; case 0
  1257  0077  1903               	skipnz
  1258  0078  287A               	goto	i1l1093
  1259  0079  28AC               	goto	i1l137
  1260  007A                     i1l1093:
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 16, Range of values is 0 to 15
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           49    25 (average)
  1267                           ; direct_byte           56     8 (fixed)
  1268                           ; jumptable            260     6 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  007A  0870               	movf	??_tabla,w
  1271  007B  3A00               	xorlw	0	; case 0
  1272  007C  1903               	skipnz
  1273  007D  2822               	goto	i1l913
  1274  007E  3A01               	xorlw	1	; case 1
  1275  007F  1903               	skipnz
  1276  0080  2827               	goto	i1l915
  1277  0081  3A03               	xorlw	3	; case 2
  1278  0082  1903               	skipnz
  1279  0083  282C               	goto	i1l917
  1280  0084  3A01               	xorlw	1	; case 3
  1281  0085  1903               	skipnz
  1282  0086  2831               	goto	i1l919
  1283  0087  3A07               	xorlw	7	; case 4
  1284  0088  1903               	skipnz
  1285  0089  2836               	goto	i1l921
  1286  008A  3A01               	xorlw	1	; case 5
  1287  008B  1903               	skipnz
  1288  008C  283B               	goto	i1l923
  1289  008D  3A03               	xorlw	3	; case 6
  1290  008E  1903               	skipnz
  1291  008F  2840               	goto	i1l925
  1292  0090  3A01               	xorlw	1	; case 7
  1293  0091  1903               	skipnz
  1294  0092  2845               	goto	i1l927
  1295  0093  3A0F               	xorlw	15	; case 8
  1296  0094  1903               	skipnz
  1297  0095  284A               	goto	i1l929
  1298  0096  3A01               	xorlw	1	; case 9
  1299  0097  1903               	skipnz
  1300  0098  284F               	goto	i1l931
  1301  0099  3A03               	xorlw	3	; case 10
  1302  009A  1903               	skipnz
  1303  009B  2854               	goto	i1l933
  1304  009C  3A01               	xorlw	1	; case 11
  1305  009D  1903               	skipnz
  1306  009E  2859               	goto	i1l935
  1307  009F  3A07               	xorlw	7	; case 12
  1308  00A0  1903               	skipnz
  1309  00A1  285E               	goto	i1l937
  1310  00A2  3A01               	xorlw	1	; case 13
  1311  00A3  1903               	skipnz
  1312  00A4  2863               	goto	i1l939
  1313  00A5  3A03               	xorlw	3	; case 14
  1314  00A6  1903               	skipnz
  1315  00A7  2868               	goto	i1l941
  1316  00A8  3A01               	xorlw	1	; case 15
  1317  00A9  1903               	skipnz
  1318  00AA  286D               	goto	i1l943
  1319  00AB  28AC               	goto	i1l137
  1320  00AC                     i1l137:
  1321  00AC  0008               	return
  1322  00AD                     __end_of_tabla:
  1323  007E                     btemp	set	126	;btemp
  1324  007E                     wtemp0	set	126
  1325                           
  1326                           	psect	config
  1327                           
  1328                           ;Config register CONFIG1 @ 0x2007
  1329                           ;	Oscillator Selection bits
  1330                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1331                           ;	Watchdog Timer Enable bit
  1332                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1333                           ;	Power-up Timer Enable bit
  1334                           ;	PWRTE = OFF, PWRT disabled
  1335                           ;	RE3/MCLR pin function select bit
  1336                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1337                           ;	Code Protection bit
  1338                           ;	CP = OFF, Program memory code protection is disabled
  1339                           ;	Data Code Protection bit
  1340                           ;	CPD = OFF, Data memory code protection is disabled
  1341                           ;	Brown Out Reset Selection bits
  1342                           ;	BOREN = OFF, BOR disabled
  1343                           ;	Internal External Switchover bit
  1344                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1345                           ;	Fail-Safe Clock Monitor Enabled bit
  1346                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1347                           ;	Low Voltage Programming Enable bit
  1348                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1349                           ;	In-Circuit Debugger Mode bit
  1350                           ;	DEBUG = 0x1, unprogrammed default
  1351  2007                     	org	8199
  1352  2007  20D1               	dw	8401
  1353                           
  1354                           ;Config register CONFIG2 @ 0x2008
  1355                           ;	Brown-out Reset Selection bit
  1356                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1357                           ;	Flash Program Memory Self Write Enable bits
  1358                           ;	WRT = OFF, Write protection off
  1359  2008                     	org	8200
  1360  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                              _Alarm
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Alarm                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0      22
                                              3 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (3) _tabla                                                3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _Alarm
   _Setup

 _ISR (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 21 21:15:48 2021

                     l99 0168                      l112 0180                      l105 0162  
                    l114 0181                      l109 018C                      _ADC 0182  
                    _AR1 0079                      _AR2 0021                      _AR3 0078  
                    _AR4 0020                      l961 0145                      l953 0130  
                    l971 014A                      l963 0146                      l955 013A  
                    l981 014F                      l973 014B                      l965 0147  
                    l957 013C                      l991 015C                      l983 0152  
                    l975 014C                      l967 0148                      l959 0140  
                    l993 015E                      l985 0155                      l977 014D  
                    l969 0149                      l995 0182                      l987 0156  
                    l979 014E                      l997 0188                      l989 0158  
                    l999 0189                      u140 0188                      u141 0187  
                    u150 017E                      u151 017D                      _ISR 00AD  
                    _mux 007C                      fsr0 0004                     ?_ADC 0070  
                   ?_ISR 0070                     l1001 0176                     l1003 017E  
                   l1071 0163                     i1l94 0127                     _TMR0 0001  
                   _main 0163                     btemp 007E                     start 000E  
                  ??_ADC 0000                    ??_ISR 0073                    ?_main 0070  
                  _ANSEL 0188                    i1l137 00AC                    i1l911 0021  
                  i1l921 0036                    i1l913 0022                    i1l931 004F  
                  i1l923 003B                    i1l915 0027                    i1l941 0068  
                  i1l933 0054                    i1l925 0040                    i1l917 002C  
                  i1l943 006D                    i1l935 0059                    i1l927 0045  
                  i1l919 0031                    i1l937 005E                    i1l929 004A  
                  i1l939 0063                    i1l947 0072                    u20_20 00F4  
                  u20_21 00F3                    u21_20 00FE                    u21_21 00FD  
                  u22_20 0104                    u22_21 0103                    u23_20 0109  
                  u23_21 0108                    u24_20 0118                    u16_20 00B1  
                  u24_21 0117                    u16_21 00B0                    u25_20 011E  
                  u17_20 00C1                    u25_21 011D                    u17_21 00C0  
                  u26_20 0123                    u26_21 0122                    u18_25 00C7  
                  u19_20 00EB                    u19_21 00EA                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _Alarm 0176                    _Setup 0130                    _anlec 007D  
                  _tabla 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0176  
                 ??_main 0000                   ?_Alarm 0070                   ?_Setup 0070  
                 _ADCON0 001F                   _ADCON1 009F                   ?_tabla 0070  
                 _ADRESH 001E                   _ANSELH 0189                   i1l1011 00B6  
                 i1l1021 00C4                   i1l1013 00BA                   i1l1005 00AD  
                 i1l1031 00DF                   i1l1023 00D1                   i1l1015 00BB  
                 i1l1007 00B1                   i1l1041 00F4                   i1l1025 00D8  
                 i1l1017 00BC                   i1l1009 00B2                   i1l1033 00E5  
                 i1l1051 0104                   i1l1043 00F5                   i1l1035 00EB  
                 i1l1027 00D9                   i1l1019 00C1                   i1l1061 0118  
                 i1l1053 0109                   i1l1045 00F9                   i1l1037 00EC  
                 i1l1029 00DA                   i1l1063 0119                   i1l1055 010D  
                 i1l1047 00FE                   i1l1039 00F0                   i1l1065 011E  
                 i1l1057 010F                   i1l1049 00FF                   i1l1067 0123  
                 i1l1059 0113                   i1l1093 007A                   i1l1069 0125  
                 _nowadc 007B                   saved_w 007E  __end_of__initialization 001C  
          __end_of_Alarm 0182           __pcstackCOMMON 0070            __end_of_Setup 0163  
          __end_of_tabla 00AD                  ??_Alarm 0000                  ??_Setup 0000  
                ??_tabla 0070               __pbssBANK0 0020               __pmaintext 0163  
             __pintentry 0004                  _HNibble 007A                  _LNibble 0022  
              _ANSELbits 0188                  __ptext1 0130                  __ptext2 0176  
                __ptext3 0182                  __ptext4 00AD                  __ptext5 0020  
           __size_of_ADC 000B             __size_of_ISR 0083     end_of_initialization 001C  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 0011  
            __end_of_ADC 018D              __end_of_ISR 0130              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0000           __size_of_Alarm 000C  
         __size_of_Setup 0033           __size_of_tabla 008D        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C               _ADCON0bits 001F  
               _WPUBbits 0095            __size_of_main 0013               _INTCONbits 000B  
               tabla@dec 0072                 intlevel1 0000               _OSCCONbits 008F  
             _OPTION_REG 0081  
